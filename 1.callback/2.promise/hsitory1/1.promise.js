// 什么是promise 它是解决异步编程的一种方案
// 它能解决什么问题
// 1）多个异步方法串行的问题
//比如 查询一个人的姓名，成功后再去查年龄，成功后再去查地址
// $.ajax({

// }, function () {
//     $.ajax({

//     }, function () {
//         $.ajax
//     })
// })

//这是很典型的回调地狱，就是不停的回调套回调，所以它不好维护，所以说我们为了解决多个异步串行的问题，可以
//采用promise, promise 有一个特点叫链式调用，它的缺点的还是基于回调，优点是写法更优雅

// 2）多个异步并发的问题，同时拿到两个异步的执行结果 Promise.all

//promise 代表的是承诺 我答应你...
// 我答应给我媳妇买个包 1.买了 成功态 2.不买 失败态 3.再等等 等待态
//也就是说创建一个promise 它有三个状态 成功 失败 等待，而且只有等待态，才可以将状态变成 成功/失败 
//不能将已经成功了再转换成其他状态，失败了也不能转换成功

//promise是es6规范中的一个类
    //1.每个promise需要提供一个执行器函数(这个函数会立即执行)
    //2.new Promise之后返回一个promise实例，这个实例上存在一个then方法
    //3.excutor中需要提供一个成功的方法和一个失败的方法
    let p = new Promise((resolve, reject) => {
        console.log(1)
        resolve('发工资了')
    })
    p.then((data) => {
        console.log(data)
    }, (err) => {

    })

    console.log(2)